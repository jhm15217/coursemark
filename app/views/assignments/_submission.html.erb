
<%= form_for [@course, @assignment], html: {class: 'submissionUpload'} do |f| %>
    <h3>Submit Assignment</h3>
    <% if @teams.length > 1 %>
        <select id="teams">
          <option value='-1' >Select Submitting Team</option>
          <% @teams.each do |t| %>
              <option value="<%= t.id %>" ><%= t.name %></option>
          <% end %>
        </select>
    <% end %>
    <% if !@submission.url.blank?  %>
        <% if Time.zone.now < @assignment.submission_due %>
            <%= link_to 'This file', @submission.url, :target => "_blank" %> has been submitted.<br />
            You may re-submit until the deadline on <%= @assignment.submission_due.strftime('%A (%-m/%-d) at %I:%M %p') %>.
        <% end %>
    <% end %>
    <div class="field">
      <%= f.file_field :url, :accept => 'application/pdf', :required => true, :style => 'border: 0px' %>
    </div>
    <div class="field">
      <%= f.hidden_field :assignment_id, value: @assignment.id %>
    </div>
    <div id='team' class="field">
      <%= f.hidden_field :user_id, value: @teams.length == 1 ? @teams[0].id : @user.id %>    <!-- value will be overwritten if multi-team assignment -->
    </div>
    <div class="actions">
      <script>
          function get_team() {
              var e = document.getElementById("teams");
              var selected_team = e.options[e.selectedIndex].value;
              console.log("old user " + document.getElementById("assignment_user_id").value);
              console.log("new user " + selected_team);
              document.getElementById("assignment_user_id").value =  selected_team;
          }
      </script>

      <button class="med_width_button button" name="commit" type="submit" onclick="get_team();" value="Submit" >Submit</button>

    </div>
    <!--
    <% if @submission.created_at %>
          <div class="edit_submission afterDeadline">
            <a href='<%= @submission.url %>' style="color:#343F53;">Check Submission</a>
          </div>
      <% end %>
    -->
<% end %>


<script>
      $(function() {
          $('.submissionUpload').find("input:file").each(function(i, elem) {
              var fileInput    = $(elem);
              var form         = $(fileInput.parents('form:first'));
              var submitButton = form.find('input[type="submit"]');
              var progressBar  = $("<div class='bar'></div>");
              var barContainer = $("<div class='progress'></div>").append(progressBar);
              fileInput.after(barContainer);
              fileInput.fileupload({
                  fileInput:       fileInput,
                  url:             '<%= @s3_direct_post.url %>',
                  type:            'POST',
                  autoUpload:       true,
                  formData:         <%= @s3_direct_post.fields.to_json.html_safe %>,
                  paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
                  dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
                  replaceFileInput: false,
                  progressall: function (e, data) {
                      var progress = parseInt(data.loaded / data.total * 100, 10);
                      progressBar.css('width', progress + '%')
                  },
                  start: function (e) {
                      var data = { assignment_id: <%= @assignment.id %>, user_id: <%= @user.id %> };
                      $.post("/submissions", data);
                      console.log("Starting Upload");
                      submitButton.prop('disabled', true);

                      progressBar.
                              css('background', 'green').
                              css('color', 'white').
                              css('border-radius', '6px').
                              css('padding', '5px').
                              css('display', 'block').
                              css('width', '0%').
                              text("Loading...");

                  },
                  done: function(e, data) {
                      submitButton.prop('disabled', false);
                      submitButton.removeClass('hidden');

                      progressBar.text("Uploaded: Ready to submit");

                      // extract key and generate URL from response
                      var key   = $(data.jqXHR.responseXML).find("Key").text();
                      var url   = '//<%= @s3_direct_post.url.host %>/Coursemark/' + key;

                      // create hidden field
                      var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
                      form.append(input);
                  },
                  fail: function(e, data) {
                      var data1 = { assignment_id: <%= @assignment.id %>, user_id: <%= @user.id %>, error: e,  data: data };
                      $.post("/submissions", data1);
                      console.log("Error, Upload Failed: ", e, data);
                      submitButton.prop('disabled', false);

                      progressBar.
                              css("background", "red"). 
                              css('color', 'white').
                              css('border-radius', '6px').
                              css('padding', '5px').
                              css('width', '100%').
                              text("Failed, try again");
                  }
              });
          });
      });
  </script>
